version: '3.8'

services:
  vpn-forticlient:
    container_name: vpn_candelaria
    build:
      context: Services/Vpn_Candelaria
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - PRTG_USERNAME=${PRTG_USERNAME}
      - PRTG_PASSWORD=${PRTG_PASSWORD}
      - CISCO_DEVICES_API_USERNAME_1=${CISCO_DEVICES_API_USERNAME_1}
      - CISCO_DEVICES_API_USERNAME_2=${CISCO_DEVICES_API_USERNAME_2}
      - CISCO_API_PASSWORD=${CISCO_API_PASSWORD}
      - DB_DEV_HOST=${DB_DEV_HOST}
      - DB_DEV_USER=${DB_DEV_USER}
      - DB_DEV_PASSWORD=${DB_DEV_PASSWORD}
      - DB_DEV_DATABASE=${DB_DEV_DATABASE}
      - DB_HOST_HISTORIC=${DB_HOST_HISTORIC}
      - DB_USER_HISTORIC=${DB_USER_HISTORIC}
      - DB_PASSWORD_HISTORIC=${DB_PASSWORD_HISTORIC}
      - DB_DATABASE_HISTORIC=${DB_DATABASE_HISTORIC}


  # dcs-candelaria_switches:
  #   container_name: dcs_switches_candelaria
  #   build:
  #     context: Services/Switches
  #   restart: always

        
  # dcs-candelaria_clients:
  #   container_name: dcs_candelaria
  #   build:
  #     context: Services/Dcs_Candelaria
  #   restart: always

      
  # ups:
  #   container_name: ups
  #   build:
  #     context: Services/Ups
  #   restart: always

  #     - MY_VARIABLE=${MY_VARIABLE}
      
  # mesh:
  #   container_name: mesh
  #   build:
  #     context: Services/Mesh
  #   restart: always

      
  # devices:
  #   container_name: devices_candelaria
  #   build:
  #     context: Services/Devices
  #   restart: always

    
  # backend-api-rest:
  #   build:
  #     context: Backend
  #   ports:
  #     - '3001:3001'
  #   restart: always
  #   environment:
  #     - NODE_ENV=production
  #   # command: sh -c "npx sequelize-cli db:migrate && node index.js"
      
  # frontend-react:
  #   build:
  #     context: Front
  #   ports:
  #     - '4000:80'
  #   restart: always
    # environment: Este se define en el archivo .env

  # wan:
  #   container_name: wan
  #   build:
  #     context: Services/Wan
  #   restart: always


  # firewalls:
  #   container_name: firewalls_canales_internet
  #   build:
  #     context: Services/Firewalls
  #   restart: always


  # infraestructura-general:
  #   container_name: inf_general_main
  #   build:
  #     context: Services/InfraGeneral
  #   restart: always


  # dcs-pac:
  #   build:
  #     context: Services/DcsPac
  #   restart: always


  # dcs-ojos:
  #   build:
  #     context: Services/DcsOjos
  #   restart: always


  # ap:
  #   build:
  #     context: Services/InfGen_Ap
  #   restart: always


  # base_fim:
  #   container_name: base_fim
  #   build:
  #     context: Services/FiM
  #   restart: always


  # anillo_opit:
  #   container_name: anillo_opit
  #   build:
  #     context: Services/Anillo_Opit
  #   restart: always


  # mesh_process:
  #   build:
  #     context: Services/Mesh_Process
  #   restart: always


  # groups_prtg:
  #   container_name: inf_gen_groups_prtg
  #   build:
  #     context: Services/Groups_Prtg
  #   restart: always


  # anillo_ug:
  #   container_name: anillo_ug
  #   build:
  #     context: Services/Anillo_Ug
  #   restart: always
